use crate::input::Key;
use anyhow::{Result, anyhow};
use rdev::Key as RecordKey;
impl TryFrom<RecordKey> for Key {
    type Error = anyhow::Error;

    fn try_from(record_key: RecordKey) -> Result<Self, Self::Error> {
        let key = match record_key {
            RecordKey::Alt => Key::Alt,
            RecordKey::AltGr => Key::Alt,
            RecordKey::Backspace => Key::Backspace,
            RecordKey::CapsLock => Key::CapsLock,
            RecordKey::ControlLeft => Key::Control,
            RecordKey::ControlRight | RecordKey::Unknown(62) => Key::Control,
            RecordKey::Delete | RecordKey::Unknown(117) => Key::Delete,
            RecordKey::DownArrow => Key::DownArrow,
            RecordKey::End | RecordKey::Unknown(119) => Key::End,
            RecordKey::Escape => Key::Escape,
            RecordKey::F1 => Key::F1,
            RecordKey::F2 => Key::F2,
            RecordKey::F3 => Key::F3,
            RecordKey::F4 => Key::F4,
            RecordKey::F5 => Key::F5,
            RecordKey::F6 => Key::F6,
            RecordKey::F7 => Key::F7,
            RecordKey::F8 => Key::F8,
            RecordKey::F9 => Key::F9,
            RecordKey::F10 => Key::F10,
            RecordKey::F11 => Key::F11,
            RecordKey::F12 => Key::F12,
            RecordKey::F13 => Key::F13,
            RecordKey::F14 => Key::F14,
            RecordKey::F15 => Key::F15,
            RecordKey::F16 => Key::F16,
            RecordKey::F17 => Key::F17,
            RecordKey::F18 => Key::F18,
            RecordKey::F19 => Key::F19,
            RecordKey::F20 => Key::F20,
            RecordKey::Home | RecordKey::Unknown(115) => Key::Home,
            RecordKey::LeftArrow => Key::LeftArrow,
            RecordKey::MetaLeft => Key::Meta,
            RecordKey::MetaRight => Key::Meta,
            RecordKey::PageDown | RecordKey::Unknown(121) => Key::PageDown,
            RecordKey::PageUp | RecordKey::Unknown(116) => Key::PageUp,
            RecordKey::Return => Key::Return,
            RecordKey::RightArrow => Key::RightArrow,
            RecordKey::ShiftLeft => Key::Shift,
            RecordKey::ShiftRight => Key::Shift,
            RecordKey::Space => Key::Space,
            RecordKey::Tab => Key::Tab,
            RecordKey::UpArrow => Key::UpArrow,
            RecordKey::PrintScreen => Key::PrintScreen,
            RecordKey::ScrollLock => Key::ScrollLock,
            RecordKey::Pause => Key::Pause,
            RecordKey::NumLock => Key::NumLock,
            RecordKey::BackQuote => Key::BackQuote,
            RecordKey::Num0 => Key::Num0,
            RecordKey::Num1 => Key::Num1,
            RecordKey::Num2 => Key::Num2,
            RecordKey::Num3 => Key::Num3,
            RecordKey::Num4 => Key::Num4,
            RecordKey::Num5 => Key::Num5,
            RecordKey::Num6 => Key::Num6,
            RecordKey::Num7 => Key::Num7,
            RecordKey::Num8 => Key::Num8,
            RecordKey::Num9 => Key::Num9,
            RecordKey::Minus => Key::Minus,
            RecordKey::Equal => Key::Equal,
            RecordKey::KeyQ => Key::Q,
            RecordKey::KeyW => Key::W,
            RecordKey::KeyE => Key::E,
            RecordKey::KeyR => Key::R,
            RecordKey::KeyT => Key::T,
            RecordKey::KeyY => Key::Y,
            RecordKey::KeyU => Key::U,
            RecordKey::KeyI => Key::I,
            RecordKey::KeyO => Key::O,
            RecordKey::KeyP => Key::P,
            RecordKey::LeftBracket => Key::LeftBracket,
            RecordKey::RightBracket => Key::RightBracket,
            RecordKey::KeyA => Key::A,
            RecordKey::KeyS => Key::S,
            RecordKey::KeyD => Key::D,
            RecordKey::KeyF => Key::F,
            RecordKey::KeyG => Key::G,
            RecordKey::KeyH => Key::H,
            RecordKey::KeyJ => Key::J,
            RecordKey::KeyK => Key::K,
            RecordKey::KeyL => Key::L,
            RecordKey::SemiColon => Key::SemiColon,
            RecordKey::Quote => Key::Quote,
            RecordKey::BackSlash => Key::BackSlash,
            RecordKey::KeyZ => Key::Z,
            RecordKey::KeyX => Key::X,
            RecordKey::KeyC => Key::C,
            RecordKey::KeyV => Key::V,
            RecordKey::KeyB => Key::B,
            RecordKey::KeyN => Key::N,
            RecordKey::KeyM => Key::M,
            RecordKey::Comma => Key::Comma,
            RecordKey::Dot => Key::Dot,
            RecordKey::Slash => Key::Slash,
            RecordKey::Insert | RecordKey::Unknown(114) => Key::Insert,
            RecordKey::KpReturn | RecordKey::Unknown(76) => Key::Return,
            RecordKey::KpMinus | RecordKey::Unknown(78) => Key::KpMinus,
            RecordKey::KpPlus | RecordKey::Unknown(69) => Key::KpPlus,
            RecordKey::KpMultiply | RecordKey::Unknown(67) => Key::KpMultiply,
            RecordKey::KpDivide | RecordKey::Unknown(75) => Key::KpDivide,
            RecordKey::Kp0 | RecordKey::Unknown(82) => Key::Kp0,
            RecordKey::Kp1 | RecordKey::Unknown(83) => Key::Kp1,
            RecordKey::Kp2 | RecordKey::Unknown(84) => Key::Kp2,
            RecordKey::Kp3 | RecordKey::Unknown(85) => Key::Kp3,
            RecordKey::Kp4 | RecordKey::Unknown(86) => Key::Kp4,
            RecordKey::Kp5 | RecordKey::Unknown(87) => Key::Kp5,
            RecordKey::Kp6 | RecordKey::Unknown(88) => Key::Kp6,
            RecordKey::Kp7 | RecordKey::Unknown(89) => Key::Kp7,
            RecordKey::Kp8 | RecordKey::Unknown(91) => Key::Kp8,
            RecordKey::Kp9 | RecordKey::Unknown(92) => Key::Kp9,
            RecordKey::KpDelete => Key::Delete,
            _ => return Err(anyhow!("Unsupported key")),
            // IntlBackslash
            // Unknown(u32),
            // F21
            // F22
            // F23
            // F24
        };
        Ok(key)
    }
}
